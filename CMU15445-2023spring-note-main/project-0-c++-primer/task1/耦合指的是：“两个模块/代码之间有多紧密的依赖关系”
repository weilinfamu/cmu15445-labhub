🧠 一句话理解耦合（Coupling）
耦合指的是：“两个模块/代码之间有多紧密的依赖关系”。

1
你可以理解为：

高耦合：它们“绑在一起”，改一个就必须改另一个
松耦合：它们“独立运行”，谁都不太依赖谁，改一个不影响另一个
===================================================================

🔄 举个菜鸟友好的生活例子：
📞 高耦合的电话通信（类似 future）：
小明给小红打电话，说：“事情做完了我打电话通知你”

小红必须等电话通知，不能自己决定什么时候处理

两个人强依赖，一个动作得配合另一个动作

👉 这就是高耦合 —— 像 future.get()，一定等它通知才继续
=====================================================================

📨 松耦合的邮箱通信（类似 消息队列）：
小明把信件放进邮箱（queue）
小红每隔一段时间检查邮箱，发现有信就读
谁都不需要知道对方在干嘛、啥时候处理
👉 这就是松耦合 —— 只管放入/取出消息，彼此不依赖！

==================================================================
特性	高耦合（如 std::future）	松耦合（如 消息队列）
控制方式	等你通知我	我自己来轮询/监听
谁依赖谁	调用者依赖被调用者	互相独立，只通过消息连接
改一个会不会牵连	会，影响大	不会，各干各的
灵活性	差	强
==================================================================
🚧 为什么要“松耦合”？
在架构设计里，松耦合 = 高可维护性 + 易扩展 + 易测试
==================================================================
尤其在并发、异步系统中：
消息队列就是天然松耦合机制













