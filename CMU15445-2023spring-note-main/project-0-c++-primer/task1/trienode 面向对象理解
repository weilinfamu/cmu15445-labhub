🧠 首先：你看到的这个结构是因为 children 是一个 map
🌳 这个 map 是什么？

std::map<char, std::shared_ptr<const TrieNode>> children;
意思是：

这个变量 children 是一个 “字典（map）”，它会把某个字符（char）映射到某个 TrieNode。

你可以理解为：

children['a'] = TrieNode("a")；
children['b'] = TrieNode("b")；
children['c'] = TrieNode("c")；

std::map<char, shared_ptr<TrieNode>> children;
等于你创建了一个箱子，里面可以放很多键值对（key:char → value:TrieNode
-------------------------------------------------------------------------
children = {
  'a' → TrieNode,
  'b' → TrieNode,
  'c' → TrieNode
}
-----------------------------------------------

✅ 问题：Trie 和 TrieNodeWithValue 是什么关系？怎么连接起来？
📌 简洁回答：
Trie 是“整个字典树”，而 TrieNodeWithValue<T> 是其中“能存值的节点”。

就像这样：

plaintext
Copy
Edit
Trie（整体）
└── TrieNode（普通节点）
     └── TrieNodeWithValue<T>（叶子节点，保存值）
