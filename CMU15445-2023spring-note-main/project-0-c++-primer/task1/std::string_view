std::string_view 是 C++17 的一个非常重要的“高效字符串处理工具”
--------------------------------------------------------------------------------------------------------------------
✅ std::string_view 是 “字符串的视图”，就像一个“窗口”，用来只读地观察已有的字符串内容，而不复制内容！

--------------------------------------------------------------------------------------------------------------------

类型	意义	是否拷贝内容？	用途
std::string	真正拥有字符串内容（在堆上）	✅ 会拷贝	用于存储和管理字符串
std::string_view	引用外部字符串（只读，不拷贝）	❌ 不会拷贝	快速传参、临时读取、轻量传递
--------------------------------------------------------------------------------------------------------------------
std::string = 拍照 ➜ 拷贝了一份文件
--------------------------------------------------------------------------------------------------------------------
std::string_view = 看屏幕上的图像 ➜ 你只是看，没有复制！
--------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <string_view>

void Print(std::string_view str) {
  std::cout << "收到: " << str << "\n";
}

int main() {
  std::string name = "Alice";
  Print(name);             // ✅ 不拷贝，只引用
  Print("Bob");            // ✅ 直接接收 C 风格字符串
}
--------------------------------------------------------------------------------------------------------------------
你可以传：
字面量 "Bob"
std::string 对象
字符数组 char[]
都能自动转换，更方便、更快！
--------------------------------------------------------------------------------------------------------------------
✅ 4. 为什么高性能？
因为：

void Print(std::string str);  // 拷贝整个字符串！
👎 慢，而且如果函数不需要修改，浪费！

而用：

void Print(std::string_view str);  // ✅ 只引用
✅ 快！几乎不占时间和空间
--------------------------------------------------------------------------------------------------------------------
⚠️ 注意事项
std::string_view 不拥有数据，仅引用原始数据
原数据不能被销毁！（生命周期必须覆盖 string_view）
--------------------------------------------------------------------------------------------------------------------
std::string_view s;
{
  std::string temp = "Hello";
  s = temp;  // ❌ temp 被销毁了，s 成了野指针！
}
--------------------------------------------------------------------------------------------------------------------







